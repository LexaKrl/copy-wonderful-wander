plugins {
    id 'nu.studer.jooq' version "$jooqPluginVersion"
    id 'org.liquibase.gradle' version "$liquibasePluginVersion"
}

jar.enabled = false

ext['jooq.version'] = jooq.version.get()

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.data:spring-data-commons'
    implementation 'org.jooq:jooq-codegen'
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    runtimeOnly 'org.postgresql:postgresql'

    implementation "io.jsonwebtoken:jjwt-api:$jwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:$jwtVersion"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jwtVersion"

    jooqGenerator 'org.postgresql:postgresql'

    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime "org.liquibase:liquibase-groovy-dsl:$liquibaseDslGroovyVersion"
    liquibaseRuntime "info.picocli:picocli:$picocliVersion"
    liquibaseRuntime 'org.postgresql:postgresql'

    implementation project(':ww-api')
    implementation project(':ww-db')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jooq {
    configurations {
        main {
            generateSchemaSourceOnCompilation = true

            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = "$dbUrl"
                    user = "$dbUsername"
                    password = "$dbPassword"
                }
                generator {
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        excludes = 'databasechangelog|databasechangeloglock'
                        outputSchema = 'public'
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                        javaTimeTypes = true
                    }
                    target {
                        packageName = 'com.technokratos'
                        directory = 'build/generated-src/jooq/main'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

liquibase {
    activities {
        main {
            arguments = [
                    logLevel     : "info",
                    changelogFile: "ww-db/src/main/resources/db/changelog/user-service/changelog-master.xml",
                    url          : "$dbUrl",
                    username     : "$dbUsername",
                    password     : "$dbPassword",
                    driver       : "org.postgresql.Driver"
            ]
        }
    }
    runList = "main"
}

tasks.named('generateJooq') {
    dependsOn 'update'
}

test {
    useJUnitPlatform()
}