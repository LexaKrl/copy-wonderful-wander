spring:
  application:
    name: user-service

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  liquibase:
    change-log: classpath:/db/changelog/user-service/changelog-master.xml

  jooq:
    sql-dialect: postgres

  jackson:
    deserialization:
      fail-on-unknown-properties: true

  cloud:
    consul:
      host: ${CONSUL_HOST}
      port: ${CONSUL_PORT}
      discovery:
        prefer-ip-address: true
        instance-id: ${spring.application.name}:${random.value}
        service-name: ${spring.application.name}
        register: true
        register-health-check: true

  kafka:
    bootstrap-servers: ${KAFKA_HOST_1}:${KAFKA_PORT_1}, ${KAFKA_HOST_2}:${KAFKA_PORT_2}
    consumer:
      group-id: avatar-saved-events
      properties:
        spring-json-trusted-packages: com.technokratos.event
    producer:
      acks: all
      retries: 10
      properties:
        delivery-timeout-ms: 20000
        linger-ms: 0
        request-timeout-ms: 10000
        enable-idempotence: true
        max-in-flight-requests-per-connection: 5

minio:
  enabled: true
  url: http://${MINIO_HOST}:${MINIO_PORT}
  accessKey: ${MINIO_ROOT_USER}
  secretKey: ${MINIO_ROOT_PASSWORD}
  bucket: ww-photos
  presigned-url-expiration: 600

logging:
  level:
    org.springframework: INFO
    org.jooq: WARN

jwt:
  enabled: true
  secret-key: ${JWT_SECRET_KEY}
  access-token-duration: ${JWT_ACCESS_TOKEN_DURATION}
  refresh-token-duration: ${JWT_REFRESH_TOKEN_DURATION}
  time-token-end-soon: ${JWT_TIME_TOKEN_END_SOON}

