services:
  - name: docker:dind
    command: ["--storage-driver=overlay2", "--host=tcp://0.0.0.0:2375"]

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

stages:
  - build
  - publish-image

build-master:
  image: gradle:8.12-jdk21
  stage: build
  script:
    - (cd ww-starter-jwt && gradle clean publishToMavenLocal --console=plain)
    - (cd ww-starter-minio && gradle clean publishToMavenLocal --console=plain)
    - gradle :ww-api-gateway:clean :ww-api-gateway:assemble --console=plain
    - gradle :ww-user-service:clean :ww-user-service:assemble --console=plain
    - gradle :ww-photo-management-service:clean :ww-photo-management-service:assemble --console=plain
  artifacts:
    paths:
      - ww-api-gateway/build/libs/
      - ww-user-service/build/libs/
      - ww-photo-management-service/build/libs/
      - /root/.m2/repository/com/technokratos
    expire_in: 1 days

publish-image:
  stage: publish-image
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/ww-api-gateway:latest" -f ww-api-gateway/Dockerfile .
    - docker build -t "$CI_REGISTRY_IMAGE/ww-user-service:latest" -f ww-user-service/Dockerfile .
    - docker build -t "$CI_REGISTRY_IMAGE/ww-photo-management-service:latest" -f ww-photo-management-service/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE/ww-api-gateway:latest"
    - docker push "$CI_REGISTRY_IMAGE/ww-user-service:latest"
    - docker push "$CI_REGISTRY_IMAGE/ww-photo-management-service:latest"